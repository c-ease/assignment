{"ast":null,"code":"import { bootstrapApplication } from '@angular/platform-browser';\n// import { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\nimport { HttpEventType, provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nfunction loggingInterceptors(request, next) {\n  console.log(\"\\n[Ongoing request]\", request);\n  return next(request).pipe(tap({\n    next: event => {\n      if (event.type === HttpEventType.Response) {\n        console.log(\"\\n[Incoming Response] Status: \", event.status, \"Body:\", event.body);\n      }\n    }\n  }));\n}\nbootstrapApplication(AppComponent, {\n  providers: [provideHttpClient(withInterceptors([loggingInterceptors]))]\n}).catch(err => console.error(err));","map":{"version":3,"names":["bootstrapApplication","AppComponent","HttpEventType","provideHttpClient","withInterceptors","tap","loggingInterceptors","request","next","console","log","pipe","event","type","Response","status","body","providers","catch","err","error"],"sources":["C:\\Users\\Dhanashree\\Desktop\\SQL Server\\Dapper SQL Server\\Client\\src\\main.ts"],"sourcesContent":["import { bootstrapApplication } from '@angular/platform-browser';\n// import { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\nimport { HttpEventType, HttpHandlerFn, HttpRequest, provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\nfunction loggingInterceptors(request: HttpRequest<unknown>, next: HttpHandlerFn) {\n  console.log(\"\\n[Ongoing request]\", request)\n  return next(request).pipe(\n    tap({\n      next: event => {\n        if (event.type === HttpEventType.Response) {\n          console.log(\"\\n[Incoming Response] Status: \", event.status,\"Body:\",event.body)\n        }\n      }\n    })\n  );\n}\n\nbootstrapApplication(AppComponent, {\n  providers: [provideHttpClient(\n    withInterceptors([loggingInterceptors])\n  )]\n}).catch((err) => console.error(err));\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,2BAA2B;AAChE;AACA,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,aAAa,EAA8BC,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AACrH,SAASC,GAAG,QAAQ,gBAAgB;AAEpC,SAASC,mBAAmBA,CAACC,OAA6B,EAAEC,IAAmB;EAC7EC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,OAAO,CAAC;EAC3C,OAAOC,IAAI,CAACD,OAAO,CAAC,CAACI,IAAI,CACvBN,GAAG,CAAC;IACFG,IAAI,EAAEI,KAAK,IAAG;MACZ,IAAIA,KAAK,CAACC,IAAI,KAAKX,aAAa,CAACY,QAAQ,EAAE;QACzCL,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEE,KAAK,CAACG,MAAM,EAAC,OAAO,EAACH,KAAK,CAACI,IAAI,CAAC;;IAElF;GACD,CAAC,CACH;AACH;AAEAhB,oBAAoB,CAACC,YAAY,EAAE;EACjCgB,SAAS,EAAE,CAACd,iBAAiB,CAC3BC,gBAAgB,CAAC,CAACE,mBAAmB,CAAC,CAAC,CACxC;CACF,CAAC,CAACY,KAAK,CAAEC,GAAG,IAAKV,OAAO,CAACW,KAAK,CAACD,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}