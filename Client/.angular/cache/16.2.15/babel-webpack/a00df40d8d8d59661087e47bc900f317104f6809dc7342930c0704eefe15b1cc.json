{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NewRecordComponent } from \"./new-record/new-record.component\";\nimport { HttpErrorResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-new-record\", 7);\n    i0.ɵɵlistener(\"close\", function AppComponent_div_0_Template_app_new_record_close_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onCancel());\n    })(\"entry\", function AppComponent_div_0_Template_app_new_record_entry_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onAddRecord($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AppComponent_div_12_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emp_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Id: \", emp_r9.empId, \" Name: \", emp_r9.empName, \" \");\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"ul\");\n    i0.ɵɵtemplate(2, AppComponent_div_12_li_2_Template, 3, 2, \"li\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_12_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.displayClose());\n    });\n    i0.ɵɵtext(4, \" Close \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.emps);\n  }\n}\nfunction AppComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"form\", 12);\n    i0.ɵɵlistener(\"ngSubmit\", function AppComponent_div_14_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onSubmit());\n    });\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵtext(3, \" Emp Id: \");\n    i0.ɵɵelementStart(4, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_14_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.id = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\")(6, \"br\");\n    i0.ɵɵelementStart(7, \"button\", 14);\n    i0.ɵɵtext(8, \"Search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_14_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.findClose());\n    });\n    i0.ɵɵtext(10, \" Close \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.id);\n  }\n}\nfunction AppComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" No Such Employee Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Record found: \");\n    i0.ɵɵelementStart(2, \"ul\")(3, \"li\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Id: \", ctx_r17.emp.empId, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Name: \", ctx_r17.emp.empName, \"\");\n  }\n}\nfunction AppComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AppComponent_div_15_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵtemplate(2, AppComponent_div_15_div_2_Template, 7, 2, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.status == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.status == 1);\n  }\n}\nfunction AppComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 15)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_16_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.closeStatus());\n    });\n    i0.ɵɵtext(5, \" Close \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.submitStatus, \" \");\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'API Client';\n    this.http = inject(HttpClient);\n    this.displayall = false;\n    this.findone = false;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n    this.submitStatus = '';\n  }\n  ngOnInit() {}\n  displayAll() {\n    this.http.get('https://localhost:5001/api/Employee').subscribe({\n      next: response => this.emps = response,\n      error: error => console.log(error),\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayall = true;\n    this.findone = false;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  displayClose() {\n    this.displayall = false;\n  }\n  findOne() {\n    this.displayall = false;\n    this.findone = true;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  onSubmit() {\n    var empId = this.id;\n    var request = \"https://localhost:5001/api/Employee/\" + empId?.toString();\n    this.http.get(request).subscribe({\n      next: response => {\n        this.emp = response;\n        this.status = 1;\n      },\n      error: error => {\n        console.log(error);\n        this.status = 0;\n      },\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayone = true;\n  }\n  findClose() {\n    this.findone = false;\n    this.displayone = false;\n    this.id = 0;\n  }\n  onStartAddTask() {\n    this.isAddingRecord = true;\n    this.displayall = false;\n    this.findone = false;\n    this.displayone = false;\n    this.afterSubmit = false;\n  }\n  onCancel() {\n    this.isAddingRecord = false;\n  }\n  onAddRecord(record) {\n    this.isAddingRecord = false;\n    console.log(record);\n    const url = 'https://localhost:5001/api/Employee';\n    const options = {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    };\n    this.http.post(url, record, options).subscribe({\n      next: response => {\n        console.log(response);\n        this.status = 1;\n      },\n      error: error => {\n        if (error instanceof HttpErrorResponse) {\n          this.submitStatus = error.message;\n          console.log(error);\n          this.status = 0;\n        }\n      },\n      complete: () => {\n        console.log(\"Request completed.\");\n        this.status = 1;\n      }\n    });\n    console.log(\"Status:\", this.status);\n    if (this.status > 0) {\n      this.submitStatus = 'Record Inserted Succefully.';\n    } else {\n      this.submitStatus = 'Record Insertion Unsuccessful. Try Again.';\n    }\n    this.afterSubmit = true;\n    console.log(\"Submit status:\", this.submitStatus);\n  }\n  closeStatus() {\n    this.afterSubmit = false;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 17,\n    vars: 5,\n    consts: [[4, \"ngIf\"], [1, \"head\"], [\"id\", \"main\", 3, \"click\"], [\"id\", \"allrow\", 1, \"row\"], [\"class\", \"column\", \"id\", \"all\", 4, \"ngIf\"], [\"id\", \"sub\", \"class\", \"column\", \"id\", \"one\", 4, \"ngIf\"], [\"class\", \"row\", \"id\", \"allrow\", 4, \"ngIf\"], [3, \"close\", \"entry\"], [\"id\", \"all\", 1, \"column\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"id\", \"sub\", \"id\", \"one\", 1, \"column\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"id\", \"id\", \"name\", \"id\", \"autocomplete\", \"off\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"id\", \"one\", 1, \"column\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AppComponent_div_0_Template, 2, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Employees\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_4_listener() {\n          return ctx.displayAll();\n        });\n        i0.ɵɵtext(5, \" Display All Employees \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n          return ctx.findOne();\n        });\n        i0.ɵɵtext(7, \" Search Employee by EmpId \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.onStartAddTask();\n        });\n        i0.ɵɵtext(9, \" Add Employee Record \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵtemplate(12, AppComponent_div_12_Template, 5, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵtemplate(14, AppComponent_div_14_Template, 12, 1, \"div\", 5);\n        i0.ɵɵtemplate(15, AppComponent_div_15_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, AppComponent_div_16_Template, 6, 1, \"div\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isAddingRecord);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayall);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.findone);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayone);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.afterSubmit);\n      }\n    },\n    dependencies: [CommonModule, i1.NgForOf, i1.NgIf, FormsModule, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, NewRecordComponent],\n    styles: [\".head[_ngcontent-%COMP%] {\\n    border: 1px solid whitesmoke;\\n    border-radius: 6px;\\n    box-shadow: 0 1px 6px rgba(0, 0, 0, 0.1);\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 1rem;\\n    margin: 0 auto 2rem auto;\\n    text-align: center;\\n}\\n#main[_ngcontent-%COMP%] {\\n    width: 200px;\\n}\\n\\n#one[_ngcontent-%COMP%] {\\n    width: 30%;\\n    padding: 10px;\\n    border: 1px solid whitesmoke;\\n    border-radius: 6px;\\n}\\n\\n#allrow[_ngcontent-%COMP%] {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 1rem;\\n    margin: 0 auto 2rem auto;\\n    text-align: center;\\n}\\n\\n#all[_ngcontent-%COMP%] {\\n    border: 1px solid whitesmoke;\\n    border-radius: 6px;\\n    overflow: hidden;\\n    align-items: center;\\n    text-align: left;\\n    width: 20%;\\n}\\n\\n.row[_ngcontent-%COMP%]:after {\\n    content: \\\"\\\";\\n    display: flex;\\n    clear: both;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n    text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0QkFBNEI7SUFDNUIsa0JBQWtCO0lBQ2xCLHdDQUF3QztJQUN4QyxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsU0FBUztJQUNULHdCQUF3QjtJQUN4QixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsYUFBYTtJQUNiLDRCQUE0QjtJQUM1QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsU0FBUztJQUNULHdCQUF3QjtJQUN4QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSw0QkFBNEI7SUFDNUIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsV0FBVztBQUNmOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgd2hpdGVzbW9rZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZ2FwOiAxcmVtO1xyXG4gICAgbWFyZ2luOiAwIGF1dG8gMnJlbSBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiNtYWluIHtcclxuICAgIHdpZHRoOiAyMDBweDtcclxufVxyXG5cclxuI29uZSB7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlc21va2U7XHJcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbn1cclxuXHJcbiNhbGxyb3cge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGdhcDogMXJlbTtcclxuICAgIG1hcmdpbjogMCBhdXRvIDJyZW0gYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuI2FsbCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZXNtb2tlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgd2lkdGg6IDIwJTtcclxufVxyXG5cclxuLnJvdzphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGNsZWFyOiBib3RoO1xyXG59XHJcblxyXG51bCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","CommonModule","HttpClient","HttpHeaders","FormsModule","NewRecordComponent","HttpErrorResponse","i0","ɵɵelementStart","ɵɵlistener","AppComponent_div_0_Template_app_new_record_close_1_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","onCancel","AppComponent_div_0_Template_app_new_record_entry_1_listener","$event","ctx_r7","onAddRecord","ɵɵelementEnd","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate2","emp_r9","empId","empName","ɵɵtemplate","AppComponent_div_12_li_2_Template","AppComponent_div_12_Template_button_click_3_listener","_r11","ctx_r10","displayClose","ɵɵproperty","ctx_r1","emps","AppComponent_div_14_Template_form_ngSubmit_1_listener","_r13","ctx_r12","onSubmit","AppComponent_div_14_Template_input_ngModelChange_4_listener","ctx_r14","id","AppComponent_div_14_Template_button_click_9_listener","ctx_r15","findClose","ctx_r2","ɵɵtextInterpolate1","ctx_r17","emp","AppComponent_div_15_div_1_Template","AppComponent_div_15_div_2_Template","ctx_r3","status","AppComponent_div_16_Template_button_click_4_listener","_r19","ctx_r18","closeStatus","ctx_r4","submitStatus","AppComponent","constructor","title","http","displayall","findone","displayone","isAddingRecord","afterSubmit","ngOnInit","displayAll","get","subscribe","next","response","error","console","log","complete","findOne","request","toString","onStartAddTask","record","url","options","headers","set","post","message","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_0_Template","AppComponent_Template_button_click_4_listener","AppComponent_Template_button_click_6_listener","AppComponent_Template_button_click_8_listener","AppComponent_div_12_Template","AppComponent_div_14_Template","AppComponent_div_15_Template","AppComponent_div_16_Template","i1","NgForOf","NgIf","i2","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","NgForm","styles"],"sources":["C:\\Users\\Dhanashree\\Desktop\\Internship\\Entity Framework SQL lite\\Client\\src\\app\\app.component.ts","C:\\Users\\Dhanashree\\Desktop\\Internship\\Entity Framework SQL lite\\Client\\src\\app\\app.component.html"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NewRecordComponent } from \"./new-record/new-record.component\";\nimport { Record } from './new-record/new-record.component';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, FormsModule, NewRecordComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'API Client';\n  http = inject(HttpClient);\n  emps: any;\n  emp: any\n  id: number | undefined;\n  status: number | undefined;\n\n  displayall = false;\n  findone = false;\n  displayone = false;\n  isAddingRecord = false;\n  afterSubmit = false;\n  submitStatus = '';\n\n  ngOnInit(): void {}\n  \n  displayAll() {\n    this.http.get('https://localhost:5001/api/Employee').subscribe({\n      next: response => this.emps = response,\n      error: error => console.log(error),\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayall = true;\n    this.findone = false;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  displayClose() {\n    this.displayall = false;\n  }\n\n  findOne() {\n    this.displayall = false;\n    this.findone = true;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  onSubmit() {\n    var empId = this.id;\n    var request = \"https://localhost:5001/api/Employee/\"+empId?.toString()\n    this.http.get(request).subscribe({\n      next: response => {this.emp = response; this.status = 1; },\n      error: error => { console.log(error); this.status = 0; },\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayone = true;\n  }\n  findClose() {\n    this.findone = false;\n    this.displayone = false;\n    this.id = 0;\n  }\n\n  onStartAddTask() {\n    this.isAddingRecord = true;\n    this.displayall = false;\n    this.findone = false;\n    this.displayone = false;\n    this.afterSubmit = false;\n  }\n\n  onCancel() {\n    this.isAddingRecord = false;\n  }\n\n  onAddRecord(record: Record) {\n    this.isAddingRecord = false;\n    console.log(record);\n    const url = 'https://localhost:5001/api/Employee';\n    const options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n  \n    this.http.post(url, record, options).subscribe({\n      next: response => { console.log(response); this.status = 1; },\n      error: error => { \n        if (error instanceof HttpErrorResponse) \n        {\n          this.submitStatus = error.message;\n          console.log(error); this.status = 0; \n        }\n      },\n      complete: () => { console.log(\"Request completed.\"); this.status = 1; }\n    });\n\n    console.log(\"Status:\",this.status);\n\n    if(this.status! > 0) {\n      this.submitStatus = 'Record Inserted Succefully.';\n    }\n    else {\n      this.submitStatus = 'Record Insertion Unsuccessful. Try Again.';\n    }\n\n    this.afterSubmit = true;\n\n    console.log(\"Submit status:\",this.submitStatus);\n\n  }\n\n  closeStatus() {\n    this.afterSubmit = false;\n  }\n}\n","<div *ngIf=\"isAddingRecord\">\r\n    <app-new-record (close)=\"onCancel()\" (entry)=\"onAddRecord($event)\"></app-new-record>\r\n</div>\r\n\r\n<div class=\"head\">\r\n    <h1>Employees</h1>\r\n    <button id='main' (click)=\"displayAll()\"> Display All Employees </button>\r\n    <button id='main' (click)=\"findOne()\"> Search Employee by EmpId </button>\r\n    <button id='main' (click)=\"onStartAddTask()\"> Add Employee Record </button>\r\n    <br>\r\n</div>\r\n\r\n<div class=\"row\" id=\"allrow\">\r\n    <div class=\"column\" id=\"all\" *ngIf=\"displayall\">\r\n        <ul>\r\n            <li *ngFor=\"let emp of emps\">\r\n                Id: {{ emp.empId }}\r\n                Name: {{ emp.empName }} <br>\r\n            </li>\r\n        </ul>\r\n        <button (click)=\"displayClose()\"> Close </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\" id=\"allrow\">    \r\n    <div id='sub' class=\"column\" id=\"one\" *ngIf=\"findone\">\r\n        <form (ngSubmit)=\"onSubmit()\">\r\n            <br>\r\n            Emp Id:\r\n            <input type=\"text\" id=\"id\" name=\"id\" [(ngModel)]=\"id\" autocomplete=\"off\"/>\r\n            <br><br>\r\n            <button type=\"submit\">Search</button><button (click)=\"findClose()\"> Close </button>\r\n        </form><br>\r\n    </div>\r\n    \r\n    <div id='sub' class=\"column\" id=\"one\" *ngIf=\"displayone\">\r\n        <div *ngIf=\"status == 0\">\r\n            No Such Employee Found\r\n        </div>\r\n        <div *ngIf=\"status == 1\">\r\n            Record found:\r\n            <ul>\r\n                <li>Id: {{emp.empId}}<br> Name: {{emp.empName}}</li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"afterSubmit\" class=\"row\" id=\"allrow\">\r\n    <div class=\"column\" id=\"one\">\r\n        <p> {{ submitStatus }} </p>\r\n        <button (click)=\"closeStatus()\"> Close </button>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}