{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NewRecordComponent } from \"./new-record/new-record.component\";\nimport { HttpErrorResponse } from '@angular/common/http';\nexport function requiredValidator() {\n  return control => {\n    return control.value ? null : {\n      required: true\n    };\n  };\n}\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'API Client';\n    this.http = inject(HttpClient); // constructor, avoid any\n    this.displayall = false;\n    this.findone = false;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n    this.submitStatus = '';\n  }\n  ngOnInit() {} // life cycle\n  displayAll() {\n    this.http.get('https://localhost:5001/api/Employee').subscribe({\n      next: response => this.emps = response,\n      error: error => console.log(error),\n      complete: () => console.log(\"Request completed.\")\n    }); // observable\n    this.displayall = true;\n    this.findone = false;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  displayClose() {\n    this.displayall = false;\n  }\n  findOne() {\n    this.displayall = false;\n    this.findone = true;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  onSubmit() {\n    var empId = this.id;\n    console.log(\"ID received:\" + empId);\n    if (empId != undefined) {\n      var request = \"https://localhost:5001/api/Employee/\" + empId?.toString();\n      this.http.get(request).subscribe({\n        next: response => {\n          this.emp = response;\n          this.status = 1;\n        },\n        error: error => {\n          console.log(error);\n          this.status = 0;\n        },\n        complete: () => console.log(\"Request completed.\")\n      });\n    } else {\n      this.status = -1;\n    }\n    this.displayone = true;\n  }\n  findClose() {\n    this.findone = false;\n    this.displayone = false;\n    this.id = 0;\n  }\n  onStartAddTask() {\n    this.isAddingRecord = true;\n    this.displayall = false;\n    this.findone = false;\n    this.displayone = false;\n    this.afterSubmit = false;\n  }\n  onCancel() {\n    this.isAddingRecord = false;\n  }\n  onAddRecord(record) {\n    this.isAddingRecord = false;\n    console.log(record);\n    const url = 'https://localhost:5001/api/Employee';\n    const options = {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    };\n    this.submitStatus = '';\n    this.http.post(url, record, options).subscribe({\n      next: response => {\n        this.submitStatus = 'Record Inserted Succefully.';\n        console.log(response);\n        this.status = 1;\n      },\n      error: error => {\n        if (error instanceof HttpErrorResponse) {\n          if (error.status == 200) {\n            this.submitStatus = 'Record Inserted Sucessfully.';\n          } else {\n            this.submitStatus = error.error;\n            console.log(error);\n            this.status = 0;\n          }\n        } else {\n          this.submitStatus = 'Record Insertion Unsuccessful. Try Again.';\n        }\n      },\n      complete: () => {\n        this.submitStatus = 'Record Inserted Succefully.';\n        console.log(\"Request completed.\");\n        this.status = 1;\n      }\n    });\n    this.afterSubmit = true;\n    console.log(\"Submit status:\", this.submitStatus);\n  }\n  closeStatus() {\n    this.afterSubmit = false;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, FormsModule, NewRecordComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","inject","CommonModule","RouterOutlet","HttpClient","HttpHeaders","FormsModule","NewRecordComponent","HttpErrorResponse","requiredValidator","control","value","required","AppComponent","constructor","title","http","displayall","findone","displayone","isAddingRecord","afterSubmit","submitStatus","ngOnInit","displayAll","get","subscribe","next","response","emps","error","console","log","complete","displayClose","findOne","onSubmit","empId","id","undefined","request","toString","emp","status","findClose","onStartAddTask","onCancel","onAddRecord","record","url","options","headers","set","post","closeStatus","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\Dhanashree\\Desktop\\SQL Server\\Dapper SQL Server\\Client\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NewRecordComponent } from \"./new-record/new-record.component\";\nimport { Record } from './new-record/new-record.component';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function requiredValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    return control.value ? null : { required: true };\n  };\n}\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, FormsModule, NewRecordComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'API Client';\n  http = inject(HttpClient); // constructor, avoid any\n  emps: any;\n  emp: any\n  id: number | undefined;\n  status: number | undefined;\n\n  displayall = false;\n  findone = false;\n  displayone = false;\n  isAddingRecord = false;\n  afterSubmit = false;\n  submitStatus = '';\n\n  ngOnInit(): void {} // life cycle\n  \n  displayAll() {\n    this.http.get('https://localhost:5001/api/Employee').subscribe({\n      next: response => this.emps = response,\n      error: error => console.log(error),\n      complete: () => console.log(\"Request completed.\")\n    }); // observable\n    this.displayall = true;\n    this.findone = false;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  displayClose() {\n    this.displayall = false;\n  }\n\n  findOne() {\n    this.displayall = false;\n    this.findone = true;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n  }\n  onSubmit() {\n    var empId = this.id;\n    console.log(\"ID received:\"+empId)\n    if(empId != undefined)\n    {\n      var request = \"https://localhost:5001/api/Employee/\"+empId?.toString()\n      this.http.get(request).subscribe({\n        next: response => {this.emp = response; this.status = 1; },\n        error: error => { console.log(error); this.status = 0; },\n        complete: () => console.log(\"Request completed.\")\n      });\n    } else {\n      this.status = -1;\n    }\n    this.displayone = true;\n  }\n  findClose() {\n    this.findone = false;\n    this.displayone = false;\n    this.id = 0;\n  }\n\n  onStartAddTask() {\n    this.isAddingRecord = true;\n    this.displayall = false;\n    this.findone = false;\n    this.displayone = false;\n    this.afterSubmit = false;\n  }\n\n  onCancel() {\n    this.isAddingRecord = false;\n  }\n\n  onAddRecord(record: Record) {\n    this.isAddingRecord = false;\n    console.log(record);\n    const url = 'https://localhost:5001/api/Employee';\n    const options = { headers: new HttpHeaders().set('Content-Type', 'application/json') };\n\n    this.submitStatus = '';\n  \n    this.http.post(url, record, options).subscribe({\n      next: response => { \n        this.submitStatus = 'Record Inserted Succefully.';\n        console.log(response); this.status = 1; },\n      error: error => { \n        if (error instanceof HttpErrorResponse) \n        {\n          if(error.status == 200)\n          {\n            this.submitStatus = 'Record Inserted Sucessfully.';\n          }\n          else {\n            this.submitStatus = error.error;\n            console.log(error); this.status = 0; \n          }\n        }\n        else {\n          this.submitStatus = 'Record Insertion Unsuccessful. Try Again.';\n        }\n      },\n      complete: () => { \n        this.submitStatus = 'Record Inserted Succefully.';\n        console.log(\"Request completed.\"); this.status = 1; }\n    });\n\n    this.afterSubmit = true;\n\n    console.log(\"Submit status:\",this.submitStatus);\n\n  }\n\n  closeStatus() {\n    this.afterSubmit = false;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAgB,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,EAAEC,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,kBAAkB,QAAQ,mCAAmC;AAEtE,SAASC,iBAAiB,QAAQ,sBAAsB;AAIxD,OAAM,SAAUC,iBAAiBA,CAAA;EAC/B,OAAQC,OAAwB,IAAmC;IACjE,OAAOA,OAAO,CAACC,KAAK,GAAG,IAAI,GAAG;MAAEC,QAAQ,EAAE;IAAI,CAAE;EAClD,CAAC;AACH;AASO,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAAlBC,YAAA;IAEL,KAAAC,KAAK,GAAG,YAAY;IACpB,KAAAC,IAAI,GAAGf,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;IAM3B,KAAAa,UAAU,GAAG,KAAK;IAClB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,cAAc,GAAG,KAAK;IACtB,KAAAC,WAAW,GAAG,KAAK;IACnB,KAAAC,YAAY,GAAG,EAAE;EAuGnB;EArGEC,QAAQA,CAAA,GAAU,CAAC,CAAC;EAEpBC,UAAUA,CAAA;IACR,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,qCAAqC,CAAC,CAACC,SAAS,CAAC;MAC7DC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACC,IAAI,GAAGD,QAAQ;MACtCE,KAAK,EAAEA,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClCG,QAAQ,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,oBAAoB;KACjD,CAAC,CAAC,CAAC;IACJ,IAAI,CAACf,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EACAa,YAAYA,CAAA;IACV,IAAI,CAACjB,UAAU,GAAG,KAAK;EACzB;EAEAkB,OAAOA,CAAA;IACL,IAAI,CAAClB,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EACAe,QAAQA,CAAA;IACN,IAAIC,KAAK,GAAG,IAAI,CAACC,EAAE;IACnBP,OAAO,CAACC,GAAG,CAAC,cAAc,GAACK,KAAK,CAAC;IACjC,IAAGA,KAAK,IAAIE,SAAS,EACrB;MACE,IAAIC,OAAO,GAAG,sCAAsC,GAACH,KAAK,EAAEI,QAAQ,EAAE;MACtE,IAAI,CAACzB,IAAI,CAACS,GAAG,CAACe,OAAO,CAAC,CAACd,SAAS,CAAC;QAC/BC,IAAI,EAAEC,QAAQ,IAAG;UAAE,IAAI,CAACc,GAAG,GAAGd,QAAQ;UAAE,IAAI,CAACe,MAAM,GAAG,CAAC;QAAE,CAAC;QAC1Db,KAAK,EAAEA,KAAK,IAAG;UAAGC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAAE,IAAI,CAACa,MAAM,GAAG,CAAC;QAAE,CAAC;QACxDV,QAAQ,EAAEA,CAAA,KAAMF,OAAO,CAACC,GAAG,CAAC,oBAAoB;OACjD,CAAC;KACH,MAAM;MACL,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC;;IAElB,IAAI,CAACxB,UAAU,GAAG,IAAI;EACxB;EACAyB,SAASA,CAAA;IACP,IAAI,CAAC1B,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACmB,EAAE,GAAG,CAAC;EACb;EAEAO,cAAcA,CAAA;IACZ,IAAI,CAACzB,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACH,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACE,WAAW,GAAG,KAAK;EAC1B;EAEAyB,QAAQA,CAAA;IACN,IAAI,CAAC1B,cAAc,GAAG,KAAK;EAC7B;EAEA2B,WAAWA,CAACC,MAAc;IACxB,IAAI,CAAC5B,cAAc,GAAG,KAAK;IAC3BW,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;IACnB,MAAMC,GAAG,GAAG,qCAAqC;IACjD,MAAMC,OAAO,GAAG;MAAEC,OAAO,EAAE,IAAI9C,WAAW,EAAE,CAAC+C,GAAG,CAAC,cAAc,EAAE,kBAAkB;IAAC,CAAE;IAEtF,IAAI,CAAC9B,YAAY,GAAG,EAAE;IAEtB,IAAI,CAACN,IAAI,CAACqC,IAAI,CAACJ,GAAG,EAAED,MAAM,EAAEE,OAAO,CAAC,CAACxB,SAAS,CAAC;MAC7CC,IAAI,EAAEC,QAAQ,IAAG;QACf,IAAI,CAACN,YAAY,GAAG,6BAA6B;QACjDS,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QAAE,IAAI,CAACe,MAAM,GAAG,CAAC;MAAE,CAAC;MAC3Cb,KAAK,EAAEA,KAAK,IAAG;QACb,IAAIA,KAAK,YAAYtB,iBAAiB,EACtC;UACE,IAAGsB,KAAK,CAACa,MAAM,IAAI,GAAG,EACtB;YACE,IAAI,CAACrB,YAAY,GAAG,8BAA8B;WACnD,MACI;YACH,IAAI,CAACA,YAAY,GAAGQ,KAAK,CAACA,KAAK;YAC/BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;YAAE,IAAI,CAACa,MAAM,GAAG,CAAC;;SAEtC,MACI;UACH,IAAI,CAACrB,YAAY,GAAG,2CAA2C;;MAEnE,CAAC;MACDW,QAAQ,EAAEA,CAAA,KAAK;QACb,IAAI,CAACX,YAAY,GAAG,6BAA6B;QACjDS,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QAAE,IAAI,CAACW,MAAM,GAAG,CAAC;MAAE;KACvD,CAAC;IAEF,IAAI,CAACtB,WAAW,GAAG,IAAI;IAEvBU,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAC,IAAI,CAACV,YAAY,CAAC;EAEjD;EAEAgC,WAAWA,CAAA;IACT,IAAI,CAACjC,WAAW,GAAG,KAAK;EAC1B;CACD;AArHYR,YAAY,GAAA0C,UAAA,EAPxBvD,SAAS,CAAC;EACTwD,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACxD,YAAY,EAAEC,YAAY,EAAEG,WAAW,EAAEC,kBAAkB,CAAC;EACtEoD,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACW/C,YAAY,CAqHxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}