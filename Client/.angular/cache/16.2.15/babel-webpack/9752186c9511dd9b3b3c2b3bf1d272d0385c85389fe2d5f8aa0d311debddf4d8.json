{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NewRecordComponent } from \"./new-record/new-record.component\";\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.title = 'API Client';\n    this.http = inject(HttpClient);\n    this.displayall = false;\n    this.findone = false;\n    this.displayone = false;\n    this.isAddingRecord = false;\n    this.afterSubmit = false;\n    this.submitStatus = '';\n  }\n  ngOnInit() {}\n  displayAll() {\n    this.http.get('https://localhost:5001/api/Employee').subscribe({\n      next: response => this.emps = response,\n      error: error => console.log(error),\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayall = true;\n    this.findone = false;\n    this.displayone = false;\n  }\n  displayClose() {\n    this.displayall = false;\n  }\n  findOne() {\n    this.findone = true;\n    this.displayall = false;\n  }\n  onSubmit() {\n    var empId = this.id;\n    var request = \"https://localhost:5001/api/Employee/\" + empId?.toString();\n    this.http.get(request).subscribe({\n      next: response => {\n        this.emp = response;\n        this.status = 1;\n      },\n      error: error => {\n        console.log(error);\n        this.status = 0;\n      },\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayone = true;\n  }\n  findClose() {\n    this.findone = false;\n    this.displayone = false;\n    this.id = 0;\n  }\n  onStartAddTask() {\n    this.isAddingRecord = true;\n  }\n  onCancel() {\n    this.isAddingRecord = false;\n  }\n  onAddRecord(record) {\n    this.isAddingRecord = false;\n    const url = 'https://localhost:5001/api/Employee';\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.http.post(url, record, options).subscribe({\n      next: response => {\n        this.emp = response;\n        this.status = 1;\n      },\n      error: error => {\n        console.log(error);\n        this.status = 0;\n      },\n      complete: () => {\n        console.log(\"Request completed.\");\n        this.status = 1;\n      }\n    });\n    this.afterSubmit = true;\n    if (this.status > 0) {\n      this.submitStatus = 'Record Inserted Succefully.';\n    } else {\n      this.submitStatus = 'Record Insertion Unsuccessful. Try Again.';\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, FormsModule, NewRecordComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","inject","CommonModule","RouterOutlet","HttpClient","HttpHeaders","FormsModule","NewRecordComponent","AppComponent","constructor","title","http","displayall","findone","displayone","isAddingRecord","afterSubmit","submitStatus","ngOnInit","displayAll","get","subscribe","next","response","emps","error","console","log","complete","displayClose","findOne","onSubmit","empId","id","request","toString","emp","status","findClose","onStartAddTask","onCancel","onAddRecord","record","url","options","headers","post","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\Dhanashree\\Desktop\\Internship\\Entity Framework SQL lite\\Client\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NewRecordComponent } from \"./new-record/new-record.component\";\nimport { Record } from './new-record/new-record.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, FormsModule, NewRecordComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'API Client';\n  http = inject(HttpClient);\n  emps: any;\n  emp: any\n  id: number | undefined;\n  status: number | undefined;\n\n  displayall = false;\n  findone = false;\n  displayone = false;\n  isAddingRecord = false;\n  afterSubmit = false;\n  submitStatus = '';\n\n  ngOnInit(): void {}\n  \n  displayAll() {\n    this.http.get('https://localhost:5001/api/Employee').subscribe({\n      next: response => this.emps = response,\n      error: error => console.log(error),\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayall = true;\n    this.findone = false;\n    this.displayone = false;\n  }\n  displayClose() {\n    this.displayall = false;\n  }\n\n  findOne() {\n    this.findone = true;\n    this.displayall = false;\n  }\n  onSubmit() {\n    var empId = this.id;\n    var request = \"https://localhost:5001/api/Employee/\"+empId?.toString()\n    this.http.get(request).subscribe({\n      next: response => {this.emp = response; this.status = 1; },\n      error: error => { console.log(error); this.status = 0; },\n      complete: () => console.log(\"Request completed.\")\n    });\n    this.displayone = true;\n  }\n  findClose() {\n    this.findone = false;\n    this.displayone = false;\n    this.id = 0;\n  }\n\n  onStartAddTask() {\n    this.isAddingRecord = true;\n  }\n\n  onCancel() {\n    this.isAddingRecord = false;\n  }\n\n  onAddRecord(record: Record) {\n    this.isAddingRecord = false;\n    const url = 'https://localhost:5001/api/Employee';\n    const options = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    };\n  \n    this.http.post(url, record, options).subscribe({\n      next: response => {this.emp = response; this.status = 1; },\n      error: error => { console.log(error); this.status = 0; },\n      complete: () => { console.log(\"Request completed.\"); this.status = 1; }\n    });\n\n    this.afterSubmit = true;\n\n    if(this.status! > 0) {\n      this.submitStatus = 'Record Inserted Succefully.';\n    }\n    else {\n      this.submitStatus = 'Record Insertion Unsuccessful. Try Again.';\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}